#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>

int main() {
    pid_t pid;
    int status;

    pid = fork();

    if (pid < 0) {
        fprintf(stderr, "Fork işlemi başarısız oldu\n");
        exit(1);
    } else if (pid == 0) {
        FILE *dosya;
        
        dosya = fopen("test_dosyasi.txt", "r");
        
        if (dosya == NULL) {
            printf("Dosya bulunamadı. Abort ile çıkış yapılacak.\n");
            abort(); 
        } else {
            fclose(dosya);
            exit(0);
        }
    } else {
        printf("Parent process child process'i bekliyor...\n");
        
        waitpid(pid, &status, 0);

        if (WIFEXITED(status)) {
            printf("Child process normal şekilde sonlandı. Çıkış kodu: %d\n", WEXITSTATUS(status));
        } 
        
        if (WIFSIGNALED(status)) {
            printf("Child process sinyal ile sonlandı. Sinyal numarası: %d\n", WTERMSIG(status));
        }
    }

    return 0;
}